pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub-credentials')
    }

    stages {
        stage('Prepare') {
            steps {
                git branch: 'main', credentialsId: 'github_test', url: 'https://github.com/gcuswmono/Focusider-FE'
            }
            post {
                success {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#F0E68C',
                        message: "Git clone success!"
                    )
                }
                failure {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#FF0000',
                        message: "Git clone Failed! Check latest log of build in http://3.38.179.245:8080/job/focusider%20frontend/"
                    )
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    def dockerImage = docker.build("focusider-fe:${env.BUILD_NUMBER}")
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-credentials') {
                        dockerImage.push()
                        dockerImage.push('latest')
                    }
                }
            }
            post {
                success {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#F0E68C',
                        message: "Docker Build and Push - SUCCESS"
                    )   
                }
                failure {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#FF0000',
                        message: "Docker Build and Push Failed! Check latest log of build in http://3.38.179.245:8080/job/focusider%20frontend/"
                    )
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker-compose ps -a'
                sh 'docker-compose down'
                sh 'docker-compose up -d'
                sh 'docker-compose logs nextjs'
            }
            post {
                success {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#F0E68C',
                        message: "Docker-Compose up success: check in http://3.38.179.245:3000/"
                    )   
                }
                failure {
                    slackSend(
                        channel: "jenkins_alert",
                        color: '#FF0000',
                        message: "Docker-Compose up Failed! Check latest log of build in http://3.38.179.245:8080/job/focusider%20frontend/"
                    )
                }
            }
        }
    }
}